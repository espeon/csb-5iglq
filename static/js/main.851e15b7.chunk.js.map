{"version":3,"sources":["components/fonts.js","components/Player.js","components/Home.js","App.js","index.js"],"names":["module","exports","verdana","Player","type","isLive","playbackURL","videoRef","useRef","playerRef","octoRef","useEffect","console","log","defaultOptions","captions","active","update","language","includes","hls","Hls","loadSource","on","Events","MANIFEST_PARSED","event","data","availableQualities","levels","map","l","height","unshift","quality","default","options","forced","onChange","e","newQuality","currentLevel","forEach","level","levelIndex","updateQuality","LEVEL_SWITCHED","span","document","querySelector","autoLevelEnabled","innerHTML","current","Plyr","video","subUrl","fonts","workerUrl","SubtitlesOctopus","attachMedia","source","title","sources","src","className","id","controls","ref","Home","useState","setData","apiGet","WebAssembly","instantiate","FetchAPI","App","exact","path","component","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.851e15b7.chunk.js","sourcesContent":["var fonts = function () {\r\n  let availablefonts = {\r\n    \"open sans\": \"https://sf.abarba.me/SF-UI-Text-Light.otf\",\r\n    \"open sans semibold\": \"https://sf.abarba.me/SF-UI-Text-Medium.otf\",\r\n    \"open sans extrabold\": \"https://sf.abarba.me/SF-UI-Text-Regular.otf\",\r\n    verdana: \"https://sf.abarba.me/SF-UI-Text-Regular.otf\"\r\n  };\r\n  return availablefonts;\r\n};\r\n\r\nif (typeof exports !== \"undefined\") {\r\n  if (typeof module !== \"undefined\" && module.exports) {\r\n    exports = module.exports = fonts;\r\n  }\r\n}\r\n","/* global SubtitlesOctopus */\nimport React, { useEffect, useRef } from \"react\";\nimport Plyr from \"plyr\";\nimport Hls from \"hls.js\";\nimport \"./player.css\";\nimport fonts from \"./fonts\";\n\nexport default function Player({\n  type = \"video\",\n  isLive = false,\n  playbackURL\n}) {\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const octoRef = useRef(null);\n  // const previewSrc = `https://image.mux.com/${playbackId}/storyboard.png`;\n  useEffect(() => {\n    console.log(type);\n    console.log(type === \"audio\");\n    const defaultOptions = {\n      captions: { active: true, update: true, language: \"en\" }\n    };\n    const videoSrc = playbackURL;\n    if (videoSrc.includes(\".m3u8\")) {\n      const hls = new Hls();\n      hls.loadSource(playbackURL);\n      hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n        const availableQualities = hls.levels.map((l) => l.height);\n        availableQualities.unshift(0); //prepend 0 to quality array\n        defaultOptions.quality = {\n          default: \"0\", //Default - AUTO\n          options: availableQualities,\n          forced: true,\n          onChange: (e) => updateQuality(e, hls)\n        };\n        hls.on(Hls.Events.LEVEL_SWITCHED, function (event, data) {\n          var span = document.querySelector(\n            \".plyr__menu__container [data-plyr='quality'][value='0'] span\"\n          );\n          if (hls.autoLevelEnabled) {\n            span.innerHTML = `Auto (${hls.levels[data.level].height}p)`;\n          } else {\n            span.innerHTML = `Auto`;\n          }\n        });\n        console.log(\"player\");\n        playerRef.current = new Plyr(videoRef.current, defaultOptions);\n        console.log(\"plyr\", playerRef);\n        console.log(videoRef.current);\n        var options = {\n          video: videoRef.current,\n          subUrl: `https://pastefy.ga/0Hm7UyYZ/raw`,\n          fonts: fonts(),\n          workerUrl: \"/subtitles-octopus/subtitles-octopus-worker.js\"\n        };\n        octoRef.current = new SubtitlesOctopus(options);\n      });\n      hls.attachMedia(videoRef.current);\n    } else {\n      playerRef.current = new Plyr(videoRef.current, defaultOptions);\n\n      playerRef.current.source = {\n        type: type,\n        title: \"Example title\",\n        sources: [\n          {\n            src: playbackURL,\n            type: type === \"audio\" ? \"audio/mp3\" : \"video/mp4\"\n          }\n        ]\n      };\n    }\n\n    function updateQuality(newQuality, hls) {\n      console.log(\"quality is\", newQuality);\n      if (newQuality === \"0\") {\n        hls.currentLevel = -1; //Enable AUTO quality if option.value = 0\n        console.log(\"Auto quality selection\");\n      } else {\n        hls.levels.forEach((level, levelIndex) => {\n          if (level.height === newQuality) {\n            console.log(\"Found quality match with \" + newQuality);\n            hls.currentLevel = levelIndex;\n          }\n        });\n      }\n    }\n  }, [videoRef, playbackURL, isLive, type, octoRef]);\n\n  return (\n    <div className=\"container\">\n      {type === \"audio\" ? (\n        <audio id=\"player\" controls ref={videoRef} />\n      ) : (\n        <video id=\"player\" controls ref={videoRef} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Player from \"./Player\";\n\nexport default function Home() {\n  return FetchAPI();\n}\n\nfunction FetchAPI() {\n  const [data, setData] = useState(\"NoData\");\n  //Get Method\n  const apiGet = () => {\n    if (data !== \"NoData\") return;\n    // fetch(\n    //   \"https://api.allorigins.win/raw?url=https%3A%2F%2Fbeta-api.crunchyroll.com%2Fcms%2Fv2%2FUS%2FM2%2Fcrunchyroll%2Fvideos%2FGDVFG8GWZ%2Fstreams%3Flocale%3Den-US%26Signature%3DbxerNNaMDMxIhgPbTMTFxEfqgcDshAHGTx83e1~0Zr4HsCfrvDeDzOjj7kSxBpL0lnhojMLozuT68xwrR4OjLBf9d51ZWiLHFcpWU0bLHPnXxEurrOXYbaVSxjywcul-Ud2sXA7kW3n3~3umudSE1z9CV7zZTQrIwSM8~-L4ksDHAOxTrFBVzn2JX7lQ9uQEaDulP0ZrEUcDz~2CGaokh5tmZNid2xPjsa7zXWEHLsPbSKz9ERk~ib~j34zuT-FSxNenD6QJYDqtQBztwg3kKPcD83~UYHNbTT6Q4mj1duyyjR02eDXhJ1VlksvuJhrELHB0OHDW4qo2uepyMZ6ZbQ__%26Policy%3DeyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9iZXRhLWFwaS5jcnVuY2h5cm9sbC5jb20vY21zL3Y~L1VTL00yL2NydW5jaHlyb2xsLyoiLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE2Mjc1NDQxMzV9fX1dfQ__%26Key-Pair-Id%3DAPKAJMWSQ5S7ZB3MF5VA\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((json) => {\n    //     console.log(json);\n    //     setData(json);\n    //   });\n    setData(\n      \"https://evs.natalie.sh/hls/evs-assets/ani/denkigai01.v,480.mp4,720.mp4,1080.mp4,.urlset/master.m3u8?token=st=1642405781~exp=1643005781~acl=/hls/*~hmac=d8a2fa0ca059054b87174ad466a76ed61e440f06c8fedbc60c3093c9e5f299f9\"\n    );\n  };\n\n  useEffect(() => {\n    apiGet();\n  });\n\n  if (\n    typeof WebAssembly === \"object\" &&\n    typeof WebAssembly.instantiate === \"function\"\n  )\n    console.log(\"wasm = true\");\n  else console.log(\"NO wasm\");\n\n  return (\n    <div className=\"content\">\n      My API <br />\n      {data === \"NoData\" ? (\n        \"No data\"\n      ) : (\n        <div>\n          <Player id=\"content\" playbackURL={data} />\n        </div>\n      )}\n    </div>\n  );\n}\n\n// const getUrlParameter = (name) => {\n//   name = name.replace(/[[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n//   let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n//   let results = regex.exec(window.location.search);\n//   return results === null\n//     ? \"\"\n//     : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n// };\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Recordings from \"./components/Recordings\";\nimport Secret from \"./components/Secret\";\nimport \"./styles.css\";\n\nimport Gelbooru from \"./components/booru/gelbooru\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}